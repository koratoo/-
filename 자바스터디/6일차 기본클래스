1. 래퍼 클래스

​

작업시 기본 자료형들이 객체로 쓰일 수 없어서 어려움을 겪는데 이럴때 각 자료형에 맞는 클래스들이 존재한다. 이런 클래스들을 감싸서 객체형태로 사용한다.

​

원시자료형은 그럼...?

​

2. 스트링 클래스

ㄴ String은 문자열을 의미한다.

​

암시적 생성 방법 : String msg = "Hello";

msg => 스택에 저장

Hello => 힙에 저장

​

명시적 생성 방법 : String msg1 = new String("hit da hit!");

new로 선언하게 되면 Heap영역의 String pool 에 저장된다.

메모리 낭비가 심함... new를 할때마다 새로 생성하기 때문

연산자를 사용하게 되면 new 를 쓴 것이랑 같은 의미기 때문에

메모리 낭비가 심함.

​

append를 할때마다 값이 저장 됨

buffer도 따로 공간이 있는데 그곳에 저장됨

​

향상된 for문 그저께 내가 설명하고 잊어먹음..

​

스트링 버퍼 : 동기화가 됨

스트링 빌더 : 동기화가 안됨, 멀티스레드에서 사용불가

단일 스레드에선 스트링 빌더가 뛰어남

​

스트링 토크나이저 

기본적으로 스페이스바로 스플릿, 값을 넣어줄 경우 . 으로 구분

nextToken( ) 이 호출될때마다 값을 줌

countToken

​

split 미리 초기화를 시킬 수 있음
